!function(){var a=angular.module("mainApp",["ngRoute","ui.bootstrap","ui.keypress","ui.event","ngSanitize","firebase","ngAnimate"]);a.constant("FBURL","https://dekkusu.firebaseio.com/").constant("DEBUG",!1),a.config(["$provide","$routeProvider",function(a,b){b.when("/",{templateUrl:"partials/homeView.html",controller:"HomeCtrl"}).when("/:username",{templateUrl:"partials/deckListView.html",controller:"DeckListCtrl"}).when("/:username/:deck",{templateUrl:"partials/deckView.html",controller:"DeckCtrl"}).otherwise({redirectTo:"/"})}]),a.config(["$logProvider","DEBUG",function(a,b){a.debugEnabled(b)}]),a.run(["angularFireAuth","FBURL","$rootScope","DEBUG","$log","$location",function(a,b,c){a.initialize(new Firebase(b),{scope:c,name:"user"})}])}();var DEBUG=!1,DAYS=864e5;angular.module("mainApp").controller("NavCtrl",["$scope","angularFireAuth","FBURL","$rootScope",function(a,b){a.collapse=!0,a.login=function(){b.login("github")},a.logout=function(){b.logout()}}]),angular.module("mainApp").controller("HomeCtrl",["$scope","$rootScope","angularFireAuth","$location",function(a,b,c,d){a.login=function(){c.login("github")},a.$on("angularFireAuth:login",function(a,b){d.path("/"+b.username)}),a.$on("angularFireAuth:logout",function(){d.path("/")}),a.$on("angularFireAuth:error",function(){})}]),angular.module("mainApp").controller("DeckListCtrl",["$scope","$location","$http","$routeParams","$rootScope","angularFire","angularFireCollection","FBURL",function(a,b,c,d,e,f,g,h){a.username=d.username||"guest",a.decks=[],a.listView=!1,console.log(a.user);var i=new Firebase(h).child("decks/"+a.username);f(i,a,"decks").then(function(){a.isOwner=a.user?a.user.username==a.username:"guest"==a.username}),a.$on("angularFireAuth:login",function(){a.isOwner=a.user?a.user.username==a.username:"guest"==a.username}),a.$on("angularFireAuth:logout",function(){a.isOwner="guest"==a.username}),a.$on("angularFireAuth:error",function(){a.isOwner="guest"==a.username}),a.addDeck=function(b){for(var b=b||[{text:""}],c="Deck",d="deck",e=1;a.decks[d];)e++,c="Deck "+e,d="deck-"+e;var f={id:d,name:c,cards:b};i.child(d).set(f)},a.removeDeck=function(a){i.child(a).set(null)}}]),angular.module("mainApp").controller("DeckCtrl2",["$scope","$http",function(a,b){a.clearCards=function(){a.deck.cards=[{text:""}]},a.resetCards=function(){b.get("data/first30.txt").success(function(b){var c=b.split("\n").filter(function(a){return""!=a}).map(function(a){a=a.replace(/\\n/g,"\n");var b=Date.now();return{text:a,due:b,last:null,interval:0}});a.deck.cards=c})}}]),angular.module("mainApp").controller("DeckCtrl",["$scope","$location","$http","$routeParams","$rootScope","statusFilterFilter","angularFire","angularFireCollection","FBURL",function(a,b,c,d,e,f,g,h,i){function j(){a.index=0,a.applyFilter(a.filter)}function k(){var a=window.getSelection();if("Range"==a.type)return DEBUG&&console.log("Window selection"),a.toString().trim();if("None"==a.type){DEBUG&&console.log("Input selection");var b=m.selectionStart,c=m.selectionEnd;if(b!==c)return m.value.slice(b,c).trim()}return null}a.username=d.username||"default",a.deckId=d.deck||0,a.decks=[],a.deck={cards:[]},a.cards=[],a.search=b.search();var l=new Firebase(i).child("decks/"+a.username);g(l,a,"decks").then(function(){a.filter=STATUSALL,a.isEditing=!1,a.isOwner=a.user?a.user.username==a.username:"guest"==a.username,a.deck=a.decks[a.deckId],a.cards=a.deck.cards,j()}),a.$on("angularFireAuth:login",function(){a.isOwner=a.user?a.user.username==a.username:"guest"==a.username}),a.$on("angularFireAuth:logout",function(){a.isOwner="guest"==a.username}),a.$on("angularFireAuth:error",function(){a.isOwner="guest"==a.username}),a.copyCards=function(){var c=a.deck,d=a.user.username,e=d+"/"+c.id;new Firebase(i).child("decks/"+e).set(c),b.path("/"+e)},a.editDeck=function(b){a.isEditing=arguments.length>0?b:!a.isEditing},a.gotoDeck=function(c){b.path("/"+a.username+"/"+c)},a.resetCards=function(){c.get("data/first30.txt").success(function(b){var c=b.split("\n").filter(function(a){return""!=a}).map(function(a){a=a.replace(/\\n/g,"\n");var b=Date.now();return{text:a,due:b,last:null,interval:0}});a.deck.cards=c,j()})},a.clearCards=function(){a.deck.cards=[{text:""}],j()},a.applyFilter=function(b){a.filter=b=b||a.filter,a.filteredCards=f(a.deck.cards,a.filter).sort(function(a,b){return a.due<b.due?-1:a.due>b.due?1:0}),a.goto(a.index)},a.goto=function(b){"object"==typeof b&&(b=a.filteredCards.indexOf(b)),b>a.filteredCards.length&&(b=a.filteredCards.length),0>b&&(a.index=0),a.index=b,a.card=a.filteredCards[a.index]},a.keypressCallback=function(b){console.log(b.keyCode),32==b.keyCode?(a.flip(),b.preventDefault()):13==b.keyCode?a.edit():37==b.keyCode?a.prev():39==b.keyCode?a.next():38!=b.keyCode||a.clozed?40!=b.keyCode||a.clozed||a.down():a.up()},a.prev=function(){var b=a.index>0?a.index:a.filteredCards.length;a.goto(b-1)},a.next=function(){var b=a.index<a.filteredCards.length-1?a.index+1:0;a.goto(b)},a.add=function(){var b=k(),c={};c.text=b||"",c.due=c.due||Date.now(),c.interval=c.interval||0,a.deck.cards.push(c),a.filteredCards=a.deck.cards,a.goto(c),a.isEditing=!0},a.deleteCard=function(){var b=a.deck.cards.indexOf(a.card);a.deck.cards.splice(b,1),a.goto(a.index)};var m=angular.element(".cardEditor")[0];a.$watch("filter",function(b,c){b!=c&&a.applyFilter(b)})}]),angular.module("mainApp").controller("CardCtrl",["$scope",function(a){function b(){a.isEditing=!1,a.clozed=!0}var c=angular.element(".cardEditor")[0];b(),a.wrap=function(b,d){window.getSelection();var e=c.selectionStart,f=c.selectionEnd,g=a.card.text;a.card.text=g.slice(0,e)+b+g.slice(e,f)+d+g.slice(f),setTimeout(function(){c.selectionStart=e+b.length,c.selectionEnd=f+b.length},100)},a.edit=function(b){arguments.length<1&&(b=!a.isEditing),a.isEditing=b},a.flip=function(){a.clozed=!a.clozed},a.up=function(){a.card.last=Date.now(),a.card.due-a.card.last<=0&&(a.card.interval=a.card.interval>0?2*a.card.interval:1),a.card.due=a.card.last+a.card.interval*DAYS,a.clozed=!0,a.applyFilter()},a.down=function(){a.card.due=a.card.last=Date.now()-5,a.card.interval=0,a.clozed=!0,a.applyFilter()}}]),angular.module("mainApp").filter("formatCard",["$sanitize",function(a){var b=function(){return[{type:"lang",regex:"(\\S*)\\{\\[(.*?)\\]\\}",replace:"$1[{$2}]"},{type:"lang",regex:"(\\S*)\\[(.*?)\\]",replace:"<ruby><rb>$1</rb><rp>&#91;</rp><rt>$2</rt><rp>&#93;</rp></ruby>"}]},c=function(){return[{type:"lang",regex:"{{(.*?)::(.*?)}}",replace:'&#91;{$1}<span class="uncloze">$2</span>&#93;'},{type:"lang",regex:"{(.*?)::(.*?)}",replace:'{$1}<span class="uncloze">$2</span>'},{type:"lang",regex:"{{(.*?)}}",replace:'&#91;{$1}<span class="uncloze">...</span>&#93;'},{type:"lang",regex:"{(.*?)}",replace:'<span class="cloze">$1</span>'}]},d=function(){return[{type:"lang",regex:"\n{1,}",replace:"\n\n"}]},e=new Showdown.converter({extensions:[d,b,c]});return function(b){return a(e.makeHtml(b||""))}}]),angular.module("mainApp").filter("firstDueIndex",function(){return function(a){var b=void 0;if(a)for(var c in a)(void 0==b||a[c].due<a[b].due)&&(b=c);return+b}}),angular.module("mainApp").filter("dueNow",function(){return function(a){var b=Date.now();return a.filter(function(a){return a.due<b})}}),angular.module("mainApp").filter("dateDays",function(){var a=Date.now();return function(b){if(!b)return"-";var c=b-a;return 0>c?"now":(c=c/1e3/60,1>c?"soon":(c=c/60/24,1>c?"<1 day":Math.floor(c)+" days"))}}),angular.module("mainApp").filter("markdown",[function(){var a=new Showdown.converter;return function(b){return a.makeHtml(b||"")}}]);var STATUSALL=-1,STATUSNEW=0,STATUSDUE=1,STATUSDONE=2;angular.module("mainApp").filter("status",[function(){var a=Date.now();return function(b){return b?null==b.last?STATUSNEW:b.due<=a?STATUSDUE:STATUSDONE:-1}}]),angular.module("mainApp").filter("statusText",[function(){return function(a){return a==STATUSNEW?"New":a==STATUSDUE?"Due":"Not due"}}]),angular.module("mainApp").filter("statusFilter",["$filter",function(a){var b=a("status");return function(a,c){return-1==c?a:a.filter(function(a){return b(a)==c})}}]),angular.module("mainApp").directive("cardBlur",function(){return function(a,b,c){b.bind("blur",function(b){b.relatedTarget||a.$apply(c.cardBlur)})}});